apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: queue-system-ingress
  namespace: queue-system
  annotations:
    # tls
    # cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    # cert-manager.io/acme-challenge-type: http01
    # rate limit
    nginx.ingress.kubernetes.io/limit-connections: "5"
    nginx.ingress.kubernetes.io/limit-rps: "5"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "10"
    # cors
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "https://queue-system.vip"
    # nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS, PUT, DELETE, PATCH"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Connection,Authorization"
    # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    # redirect to https
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # others
    nginx.ingress.kubernetes.io/configuration-snippet: |
      send_timeout 75s;
      keepalive_timeout 75s 75s;
      keepalive_requests 10000;

      gzip_vary on;
      gzip_proxied any;
      gzip_buffers 16 8k;

      etag on;
      
      add_header Cache-Control "no-cache";

      if ($request_uri ~* \.(css|gif|jpe?g|png|svg|ico)) {
        add_header Cache-Control "max-age=31536000";
      }

      if ($request_uri ~* \.(js)) {
        add_header Cache-Control "private, max-age=31536000";
      }

spec:
  # ingressClassName: nginx
  ingressClassName: public
  tls:
  - hosts:
    - queue-system.vip
    secretName: queue-system-secret
  rules:
  - host: queue-system.vip
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80

# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml